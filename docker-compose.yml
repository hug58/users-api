

services:

  backend:
    build: .
    command: /users-api
    environment:
      - PGHOST=db_postgres
      - PGDATABASE=postgres
      - PGPORT=5432
      - PGUSER=postgres
      - PGPASSWORD=postgres
      - SECRET=SUPERSECRET!
      - TOKEN_EXPIRATION_MINUTES=5m
      - REDIS_PORT=6379
      - REDIS_HOST=redis
      - REDIS_PASSWORD=password123 
    networks:
      - postgres_network
      - redis_network

    ports:
      - "9000:8080"
    depends_on:
      redis:
        condition: service_healthy
      db_postgres:
        condition: service_healthy 

  db_postgres:
    image: postgres:17.0
    environment:
        POSTGRES_USER: postgres
        POSTGRES_PASSWORD: postgres
        POSTGRES_DB: postgres
    healthcheck:  
      test: ["CMD-SHELL", "pg_isready -U postgres"]
      interval: 10s
      timeout: 5s
    ports:
        - "5432:5432"
    volumes:
        - postgres_data:/var/lib/postgresql/data
    networks:
      - postgres_network

  redis:
    image: redis:6.2.5-alpine
    restart: always
    ports:
      - "6379:6379"
    environment:
      - REDIS_PASSWORD=password123 
    command: ["redis-server", "--requirepass", password123]  
    healthcheck:
      test: ["CMD", "redis-cli", "-a", "$$REDIS_PASSWORD", "ping"]
      interval: 10s
      timeout: 5s
      retries: 3
    networks:
      - redis_network

volumes:
  postgres_data:

networks:
  postgres_network:
  redis_network: